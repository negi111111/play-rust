{"message":"failed to resolve: could not find `Args` in `clap`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":"could not find `Args` in `clap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":false,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clap)]","def_site_span":{"file_name":"/home/tanno/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_derive-3.0.0-beta.4/src/lib.rs","byte_start":1791,"byte_end":1837,"line_start":52,"line_end":52,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub fn clap(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `Args` in `clap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clap, Debug)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `Args` in `clap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Clap` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `into_app_for_update` is not a member of trait `clap::IntoApp`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":"not a member of trait `clap::IntoApp`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":false,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clap)]","def_site_span":{"file_name":"/home/tanno/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_derive-3.0.0-beta.4/src/lib.rs","byte_start":1791,"byte_end":1837,"line_start":52,"line_end":52,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub fn clap(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `into_app_for_update` is not a member of trait `clap::IntoApp`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clap, Debug)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `clap::IntoApp`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Clap` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `update_from_arg_matches` is not a member of trait `clap::FromArgMatches`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":"not a member of trait `clap::FromArgMatches`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":false,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clap)]","def_site_span":{"file_name":"/home/tanno/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_derive-3.0.0-beta.4/src/lib.rs","byte_start":1791,"byte_end":1837,"line_start":52,"line_end":52,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub fn clap(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `update_from_arg_matches` is not a member of trait `clap::FromArgMatches`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clap, Debug)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `clap::FromArgMatches`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Clap` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"expected trait, found derive macro `clap::Args`","code":{"code":"E0404","explanation":"A type that is not a trait was used in a trait position, such as a bound\nor `impl`.\n\nErroneous code example:\n\n```compile_fail,E0404\nstruct Foo;\nstruct Bar;\n\nimpl Foo for Bar {} // error: `Foo` is not a trait\nfn baz<T: Foo>(t: T) {} // error: `Foo` is not a trait\n```\n\nAnother erroneous code example:\n\n```compile_fail,E0404\ntype Foo = Iterator<Item=String>;\n\nfn bar<T: Foo>(t: T) {} // error: `Foo` is a type alias\n```\n\nPlease verify that the trait's name was not misspelled or that the right\nidentifier was used. Example:\n\n```\ntrait Foo {\n    // some functions\n}\nstruct Bar;\n\nimpl Foo for Bar { // ok!\n    // functions implementation\n}\n\nfn baz<T: Foo>(t: T) {} // ok!\n```\n\nAlternatively, you could introduce a new trait with your desired restrictions\nas a super trait:\n\n```\n# trait Foo {}\n# struct Bar;\n# impl Foo for Bar {}\ntrait Qux: Foo {} // Anything that implements Qux also needs to implement Foo\nfn baz<T: Qux>(t: T) {} // also ok!\n```\n\nFinally, if you are on nightly and want to use a trait alias\ninstead of a type alias, you should use `#![feature(trait_alias)]`:\n\n```\n#![feature(trait_alias)]\ntrait Foo = Iterator<Item=String>;\n\nfn bar<T: Foo>(t: T) {} // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":"not a trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":false,"text":[{"text":"#[derive(Clap, Debug)]","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clap)]","def_site_span":{"file_name":"/home/tanno/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_derive-3.0.0-beta.4/src/lib.rs","byte_start":1791,"byte_end":1837,"line_start":52,"line_end":52,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub fn clap(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0404]\u001b[0m\u001b[0m\u001b[1m: expected trait, found derive macro `clap::Args`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clap, Debug)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a trait\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Clap` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0404, E0407, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0404, E0407, E0433.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0404`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0404`.\u001b[0m\n"}
